{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "resourceNameRoot": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "dnsNameforLBIP": {
      "type": "string",
      "metadata": {
        "description": "DNS for Load Balancer IP"
      }
    },
    "imagePublisher": {
      "type": "string",
      "defaultValue": "bitnami",
      "metadata": {
        "description": "Publisher"
      }
    },
    "imageOffer": {
      "type": "string",
      "defaultValue": "DreamFactory",
      "metadata": {
        "description": "Offer"
      }
    },
    "imageSKU": {
      "type": "string",
      "defaultValue": "1.6",
      "metadata": {
        "description": "SKU"
      }
    },
    "wafVMNamePrefix": {
      "type": "string",
      "defaultValue": "wafvm",
      "metadata": {
        "description": "Prefix to use for Waf VM names"
      }
    },
    "webVMNamePrefix": {
      "type": "string",
      "defaultValue": "webvm",
      "metadata": {
        "description": "Prefix to use for Web VM names"
      }
    },
    "externalLBName": {
      "type": "string",
      "defaultValue": "external-lb",
      "metadata": {
        "description": "External Load Balancer name"
      }
    },
    "internalLBName": {
      "type": "string",
      "defaultValue": "internal-lb",
      "metadata": {
        "description": "Internal Load Balancer name"
      }
    },
    "wafNicNamePrefix": {
      "type": "string",
      "defaultValue": "waf-nic",
      "metadata": {
        "description": "Network Interface name prefix"
      }
    },
    "webNicNamePrefix": {
      "type": "string",
      "defaultValue": "web-nic",
      "metadata": {
        "description": "Network Interface name prefix"
      }
    },
    "publicIPAddressName": {
      "type": "string",
      "defaultValue": "azureowasp-pip",
      "metadata": {
        "description": "Public IP Name"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "owasp-vnet",
      "metadata": {
        "description": "VNET name"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "wafSubnetName": {
      "type": "string",
      "defaultValue": "waf-subnet",
      "metadata": {
        "description": "Name of Subnet"
      }
    },
    "webSubnetName": {
      "type": "string",
      "defaultValue": "web-subnet",
      "metadata": {
        "description": "Name of Subnet"
      }
    }
  },
  "variables": {
    "wafAvailabilitySetName": "[concat(parameters('resourceNameRoot'),'waf-as')]",
    "webAvailabilitySetName": "[concat(parameters('resourceNameRoot'),'web-as')]",
    "addressPrefix": "10.0.0.0/16",
    "wafSubnetName":  "[parameters('wafSubnetName')]",
    "wafSubnetPrefix": "10.0.0.0/28",
    "webSubnetName": "[parameters('webSubnetName')]",
    "webSubnetPrefix": "10.0.0.24/28",
    "publicIPAddressType": "Dynamic",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('vnetName'))]",
    "wafSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('wafSubnetName'))]",
    "webSubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('webSubnetName'))]",
    "publicIPAddressID": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]",
    "numberOfWafInstances": 2,
    "numberOfWebInstances": 2,
    "externalLBId": "[resourceId('Microsoft.Network/loadBalancers',parameters('externalLBName'))]",
    "internalLBId": "[resourceId('Microsoft.Network/loadBalancers',parameters('internalLBName'))]",
    "wafFrontEndIPConfigID": "[concat(variables('externalLBId'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "webFrontEndIPConfigID": "[concat(variables('internalLBId'),'/frontendIPConfigurations/LoadBalancerFrontEnd')]",
    "externalLBPoolId": "[concat(variables('externalLBId'),'/backendAddressPools/BackendPool1')]",
    "internalLBPoolId": "[concat(variables('internalLBId'),'/backendAddressPools/BackendPool1')]",
    "externalLBProbeId": "[concat(variables('externalLBId'),'/probes/tcpProbe')]",
    "internalLBProbeId": "[concat(variables('internalLBId'),'/probes/tcpProbe')]"
  },
  "resources": [
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('wafAvailabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "type": "Microsoft.Compute/availabilitySets",
      "name": "[variables('webAvailabilitySetName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": { }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[parameters('publicIPAddressName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[parameters('dnsNameforLBIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('wafSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('wafSubnetPrefix')]"
            }
          },
          {
            "name": "[variables('webSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('webSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('wafNicNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfWafInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('externalLBName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "waf-ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('wafSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('externalLBPoolId')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[concat(variables('externalLBId'),'/inboundNatRules/Manage-VM', copyindex())]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[concat(parameters('webNicNamePrefix'), copyindex())]",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "nicLoop",
        "count": "[variables('numberOfWebInstances')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', parameters('vnetName'))]",
        "[concat('Microsoft.Network/loadBalancers/', parameters('internalLBName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "webSubnet-ipconfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('webSubnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[variables('internalLBPoolId')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "name": "[parameters('externalLBName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('publicIPAddressID')]",
        "[variables('vnetID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LoadBalancerFrontEnd",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('publicIPAddressID')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "inboundNatRules": [
          {
            "name": "Manage-VM0",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('wafFrontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 8000,
              "backendPort": 8000,
              "enableFloatingIP": false
            }
          },
          {
            "name": "Manage-VM1",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('wafFrontEndIPConfigID')]"
              },
              "protocol": "tcp",
              "frontendPort": 8001,
              "backendPort": 8000,
              "enableFloatingIP": false
            }
          }
        ],
        "loadBalancingRules": [
          {
            "name": "externallbrule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('wafFrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('externalLBPoolId')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[variables('externalLBProbeId')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcpProbe",
            "properties": {
              "protocol": "tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/loadBalancers",
      "name": "[parameters('internalLBName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[variables('vnetID')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "properties": {
              "subnet": {
                "id": "[variables('webSubnetRef')]"
              },
              "privateIPAddress": "10.0.0.20",
              "privateIPAllocationMethod": "Static"
            },
            "name": "LoadBalancerFrontEnd"
          }
        ],
        "backendAddressPools": [
          {
            "name": "BackendPool1"
          }
        ],
        "loadBalancingRules": [
          {
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('webFrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('internalLBPoolId')]"
              },
              "probe": {
                "id": "[variables('internalLBProbeId')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "idleTimeoutInMinutes": 15
            },
            "name": "internallbrule"
          }
        ],
        "probes": [
          {
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            },
            "name": "tcpProbe"
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('wafVMNamePrefix'), copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfWafInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('wafNicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('wafAvailabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('wafAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[concat(parameters('wafVMNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "osDisk": {
            "name": "owaspwaf1osdisk",
            "osType": "linux",
            "vhd": {
              "uri": "[concat('https://owasprm.blob.core.windows.net/instances/wafosdisk', concat(copyIndex(), '.vhd'))]"
            },
            "image": {
              "uri": "https://owasprm.blob.core.windows.net/barracudavhd/BarracudaWebAppFirewall-vm4.2.5-fw8.0.1.005-20151007.vhd"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('wafNicNamePrefix'),copyindex()))]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[concat(parameters('webVMNamePrefix'), copyindex())]",
      "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfWebInstances')]"
      },
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('webNicNamePrefix'), copyindex())]",
        "[concat('Microsoft.Compute/availabilitySets/', variables('webAvailabilitySetName'))]"
      ],
      "properties": {
        "availabilitySet": {
          "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('webAvailabilitySetName'))]"
        },
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computername": "[concat(parameters('webVMNamePrefix'), copyIndex())]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('imagePublisher')]",
            "offer": "[parameters('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://owasprm.blob.core.windows.net/instances/webosdisk', copyindex(), '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('webNicNamePrefix'),copyindex()))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "http://owasprm.blob.core.windows.net"
          }
        }
      }
    }
  ]
}